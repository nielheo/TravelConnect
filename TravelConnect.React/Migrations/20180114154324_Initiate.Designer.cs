// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;
using TravelConnect.Gta.DataServices;

namespace TravelConnect.React.Migrations
{
    [DbContext(typeof(GtaContext))]
    [Migration("20180114154324_Initiate")]
    partial class Initiate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("TravelConnect.Gta.DataModels.City", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Code");

                    b.HasIndex("CountryCode");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("TravelConnect.Gta.DataModels.Country", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Code");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("TravelConnect.Gta.DataModels.Hotel", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Copyright")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float?>("Latitude")
                        .HasColumnType("float")
                        .HasMaxLength(100);

                    b.Property<float?>("Longitude")
                        .HasColumnType("float")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("StarRating")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Code");

                    b.HasIndex("CityCode");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("TravelConnect.Gta.DataModels.HotelLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HotelCode")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("LocationCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("HotelCode");

                    b.HasIndex("LocationCode");

                    b.ToTable("HotelLocations");
                });

            modelBuilder.Entity("TravelConnect.Gta.DataModels.Location", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Code");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("TravelConnect.Gta.DataModels.City", b =>
                {
                    b.HasOne("TravelConnect.Gta.DataModels.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TravelConnect.Gta.DataModels.Hotel", b =>
                {
                    b.HasOne("TravelConnect.Gta.DataModels.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TravelConnect.Gta.DataModels.HotelLocation", b =>
                {
                    b.HasOne("TravelConnect.Gta.DataModels.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TravelConnect.Gta.DataModels.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
